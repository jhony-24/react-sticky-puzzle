{"version":3,"sources":["lib/ReactStickyPuzzle/components/Item.jsx","lib/ReactStickyPuzzle/components/reducer.js","lib/ReactStickyPuzzle/index.js","lib/ReactStickyPuzzle/components/Container.jsx","lib/ReactStickyPuzzle/utils/stickyPuzzleUtils.js","App.jsx","index.js"],"names":["Item","props","children","isSticky","styleSticky","refItem","restProps","selfStyleElement","backgroundColor","ref","style","className","memo","initialState","items","TYPE","reducer","state","action","type","payload","key","value","ReactStickyPuzzle","onFixed","inElement","useReducer","refItems","useRef","Map","current","refContainerElement","getArrayElements","map","callbackFilter","refArray","undefined","transformMapToArray","element","bounding","getBoundingClientRect","propsElements","elements","lengthElements","length","onScrollEvent","onScrollCallback","addEventListener","removeEventListener","setActionSticky","dispatchOnFixedIsSticky","getSumTotalOfHeightElementsLimit","el","index","array","limit","callbackSum","total","i","sumMatrixToSelectedIndex","item","height","useEffect","sumTotalHeight","parentNode","e","target","scrollTop","offsetTop","offsetLeft","clientWidth","spaceFromTop","boundingMarginTop","window","scrollY","top","topPosition","position","width","left","removeProperty","scrollPage","useCallback","classList","add","marginTop","nextSibling","remove","React","Children","cloneElement","node","set","Box","Array","fill","border","App","overflowY","background","margin","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.781e0087.chunk.js","sourcesContent":["import React, { memo } from \"react\";\n\nconst Item = (props) => {\n  const {\n    children,\n    isSticky,\n    styleSticky,\n    refItem,\n    ...restProps\n  } = props;\n\n  const selfStyleElement = {\n    ...isSticky && {\n      ...styleSticky ? styleSticky : {\n        backgroundColor : \"white\"\n      }\n    }\n  }\n  return (\n    <>\n      <div {...restProps} ref={refItem} style={selfStyleElement}>\n        {children}\n      </div>\n      <div className=\"sticky__placeholder\"></div>\n    </>\n  );\n};\n\nexport default memo(Item);\n  ","export const initialState = {\n  items: {},\n};\n\nexport const TYPE = {\n  SET_STICKY_ITEM: \"SET_STICKY_ITEM\",\n};\n\nexport const actionSetStickyItem = (payload) => ({\n  type: TYPE.SET_STICKY_ITEM,\n  payload,\n});\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case TYPE.SET_STICKY_ITEM:\n      const { key, value } = action.payload;\n      return {\n        ...state,\n        items: {\n          ...state.items,\n          [key]: {\n            ...state.items[key],\n            ...value,\n          },\n        },\n      };\n    default:\n      return state;\n  }\n};\n","import { default as ReactStickyPuzzle } from \"./components/Container\";\nimport { default as StickyPuzzleItem } from \"./components/Item\";\n\nexport { StickyPuzzleItem };\n\nexport default ReactStickyPuzzle;\n","import React, { useCallback, useEffect, useReducer, useRef } from \"react\";\nimport \"../css/index.css\";\nimport Item from \"./Item\";\nimport { sumMatrixToSelectedIndex, transformMapToArray } from \"../utils/stickyPuzzleUtils\";\nimport { actionSetStickyItem , initialState, reducer } from \"./reducer\";\n\nconst Container = ({ children, onFixed, inElement }) => {  \n  const [state, action] = useReducer(reducer, initialState);\n  const refItems = useRef(new Map()).current;\n  const refContainerElement = useRef(null);\n\n  // Get elements with data in array of objects\n  const getArrayElements = () => transformMapToArray(refItems,({key,value}) => ({\n    key,\n    isSticky : true, \n    element : value,\n    bounding: value.getBoundingClientRect(),\n  }));\n\n  // Get data elements and length of elements\n  const propsElements = () => {\n    const elements = getArrayElements();\n    const lengthElements = elements.length;\n    return {\n      elements,\n      lengthElements\n    }\n  }\n\n  // Emit and destroy scroll event \n  const onScrollEvent = (element,onScrollCallback) => {\n    element.addEventListener(\"scroll\",onScrollCallback);\n    return () => element.removeEventListener(\"scroll\",onScrollCallback);\n  }\n\n  // Dispatch event action to set sticky item\n  const setActionSticky = (element,{key,isSticky}) => {\n    if(element.isSticky === isSticky){\n      element.isSticky = !isSticky;\n      action(actionSetStickyItem({\n        key,\n        value : {\n          isSticky\n        }\n      }))\n    }\n  }\n\n  const dispatchOnFixedIsSticky = (element) => {\n    if(element.isSticky) {\n      onFixed && onFixed();\n    }\n  }\n\n  // Get the sum total of the height of the elements up to an index  \n  const getSumTotalOfHeightElementsLimit = (elements) => {\n    const el = elements;\n    return (index) => sumMatrixToSelectedIndex(el,index,item => item.bounding.height);\n  }\n  \n  // Scrolling element\n  useEffect(() => {\n    const {  elements, lengthElements } = propsElements();\n    const sumTotalHeight = getSumTotalOfHeightElementsLimit(elements);\n\n    const onScroll = (e) => {\n      const { scrollTop, offsetTop, offsetLeft, clientWidth } = e.target;\n      for(let i = 0; i < lengthElements; i++) {\n        let { key, bounding, element } = elements[i];\n        let spaceFromTop = sumTotalHeight(i);\n        const boundingMarginTop = (offsetTop - window.scrollY) + spaceFromTop;\n        const isSticky = scrollTop > ( bounding.top - (elements[i - 1]?.bounding?.height || 0) - boundingMarginTop );\n        if (isSticky) {\n          let topPosition = boundingMarginTop - window.scrollY;\n          element.style.position = \"fixed\";\n          element.style.width = clientWidth + \"px\";\n          element.style.top = topPosition + \"px\";\n          element.style.left = offsetLeft + \"px\";\n          dispatchOnFixedIsSticky(elements[i]);\n        }\n        else {\n          element.style.removeProperty(\"position\");\n        }\n        setActionSticky(elements[i],{ key, isSticky });\n      }\n    }\n    if(inElement) {\n      refContainerElement.current = refContainerElement.current.parentNode;\n      return onScrollEvent(refContainerElement.current,onScroll);\n    }\n    // eslint-disable-next-line\n  },[inElement])\n\n  \n  // effect to dispatch in scroll elements\n  useEffect(() => {\n    if(inElement) {\n      const {  elements, lengthElements } = propsElements();\n      const sumTotalHeight = getSumTotalOfHeightElementsLimit(elements);\n      const onScroll = (e) => {\n        const { offsetTop } = refContainerElement.current;\n        for(let i = 0; i < lengthElements; i++) {\n          let { element } = elements[i];\n          let spaceFromTop = sumTotalHeight(i);\n          element.style.top = ((offsetTop - window.scrollY) + spaceFromTop) + \"px\";\n        }      \n      }\n      return onScrollEvent(window,onScroll);\n    }\n  // eslint-disable-next-line\n  },[inElement]);\n\n\n  // Scrolling in screen\n  const scrollPage = useCallback(() => {\n    const {  elements, lengthElements } = propsElements();\n    const sumTotalHeight = getSumTotalOfHeightElementsLimit(elements);\n\n    const onScroll = () => {\n        for(let i = 0; i < lengthElements; i++) {\n          let { key, bounding, element } = elements[i];\n          let spaceFromTop = sumTotalHeight(i);\n          let isSticky = window.scrollY > (bounding.top - (elements[i - 1]?.bounding?.height || 0));\n          if(isSticky) {\n            element.classList.add(\"sticky__item\");\n            element.style.marginTop = spaceFromTop + \"px\";\n            element.nextSibling.style.height = bounding.height + \"px\";\n            dispatchOnFixedIsSticky(elements[i]);\n          } \n          else {\n            element.classList.remove(\"sticky__item\");\n            element.nextSibling.style.height = \"0px\";\n          }\n          setActionSticky(elements[i],{ key, isSticky });\n        }\n    }\n    return onScrollEvent(window,onScroll);\n    // eslint-disable-next-line\n  },[])\n\n  // scrolling by default of type page\n  useEffect(() => {\n    !inElement && scrollPage();\n  },[scrollPage,inElement]);\n\n  return(\n    <div ref={refContainerElement}>\n    {React.Children.map(children, (e, i) => {\n      if(e.type === Item) {\n        const { isSticky } = state.items[i] || {};\n        const ElementCloned = React.cloneElement(e,{\n            refItem : node => refItems.set(i,node) ,\n            isSticky\n        })\n        return ElementCloned;\n      }\n      return e;\n    })}\n    </div>\n  )\n};\n\nexport default Container;\n","/**\n * Perform the sum of the first index to a selected index\n * @param {Array} array\n * @param {number} limit\n * @returns {number}\n */\nexport const sumMatrixToSelectedIndex = (array, limit,callbackSum) => {\n  if(callbackSum) {\n    let total = 0;\n    for(let i = 0 ; i < limit; i++) {\n      total += callbackSum(array[i]);\n    }\n    return total;\n  }\n  return 0;\n};\n\n/**\n * Transform Map iterator to an array of objects\n * @param {Map} map\n * @param {Function} callbackFilter\n * @returns {Array}\n */\nexport const transformMapToArray = (map, callbackFilter) => {\n  const refArray = [...map];\n  if(callbackFilter === undefined) return;\n  const callbackFilterValues = ([key,value]) => callbackFilter({key,value})\n  return refArray.map(callbackFilterValues);\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport ReactStickyPuzzle, { StickyPuzzleItem } from \"./lib/ReactStickyPuzzle\";\n\nconst App = () => {\n  return (\n    <div>\n      <h1 className=\"sticky__title\">STICKY DEMO</h1>\n      <Box i={4} />\n      <div className=\"container-sticky\" style={{\n        width:\"300px\",\n        height:\"400px\",\n        overflowY: \"scroll\",\n        background:\"rgba(0,0,100,.1)\",\n        margin:\"auto\"\n      }}>\n      <ReactStickyPuzzle inElement>\n        <Box i={3} />\n        <StickyPuzzleItem>\n          <div> STICKY 1</div>\n        </StickyPuzzleItem>\n        <Box i={20} />\n        <StickyPuzzleItem>\n          <div> STICKY 2</div>\n        </StickyPuzzleItem>\n        <StickyPuzzleItem>\n          <div style={{background:\"green\"}}> title 3</div>\n        </StickyPuzzleItem>\n        <StickyPuzzleItem>\n          <div style={{background:\"lime\"}}> STICKY 4</div>\n        </StickyPuzzleItem>\n        <Box i={100} />\n      </ReactStickyPuzzle>\n      </div>\n        \n      <ReactStickyPuzzle>\n        <Box i={3} />\n        <StickyPuzzleItem styleSticky={{\n          background : \"gray\"\n        }}>\n          <div className=\"sticky__root\"> STICK 1</div>\n        </StickyPuzzleItem>\n        <Box i={20} />\n        <StickyPuzzleItem>\n          <div className=\"sticky__root\"> STICKY 2</div>\n        </StickyPuzzleItem>\n        <StickyPuzzleItem styleSticky={{\n          background : \"red\"\n        }}>\n          <div className=\"sticky__root\">STICKY 3</div>\n        </StickyPuzzleItem>\n        <Box i={100} />\n      </ReactStickyPuzzle>\n\n    </div>\n  );\n};\n\nexport const Box = ({ i }) => {\n  return Array(i)\n    .fill(0)\n    .map((e, i) => <h1 key={i} style={{border:\"1px solid silver\"}}>{i}</h1>);\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}